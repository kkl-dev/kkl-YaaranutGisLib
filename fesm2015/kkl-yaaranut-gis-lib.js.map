{"version":3,"file":"kkl-yaaranut-gis-lib.js","sources":["../../../projects/work-unit/src/lib/work-unit.service.ts","../../../projects/work-unit/src/lib/work-unit.component.ts","../../../projects/work-unit/src/lib/work-unit.module.ts","../../../projects/work-unit/src/public-api.ts","../../../projects/work-unit/src/kkl-yaaranut-gis-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkUnitService {\n\n  constructor() { }\n}\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\n\n//import WebMap from \"@arcgis/core/WebMap\";\n//import MapView from \"@arcgis/core/views/MapView\";\n//import FeatureLayer from \"@arcgis/core/layers/FeatureLayer\";\n//import Basemap from \"@arcgis/core/Basemap\";\n//import LabelClass from \"@arcgis/core/layers/support/LabelClass\";\n//import { SimpleFillSymbol, SimpleLineSymbol, TextSymbol } from '@arcgis/core/symbols';\n//import Color from '@arcgis/core/Color';\n//import SimpleRenderer from '@arcgis/core/renderers/SimpleRenderer';\n\n@Component({\n  selector: 'kkl-workUnit',\n  template: `aaaa\n    <div #mapViewNode style=\"width:400px;height: 400px;background-color:yellow\"></div>\n  zzzz`,\n  styles: [\n  ]\n})\nexport class WorkUnitComponent implements OnInit {\n\n  @ViewChild('mapViewNode', { static: true }) set content(content: ElementRef) {\n    if (content) { this.mapViewEl = content; }\n  }\n  @Output() mapLoaded = new EventEmitter<boolean>();\n  private mapViewEl!: ElementRef;\n  private _workUnits: string[] = [];\n\n  @Input()\n  set workUnits(workUnits: string[]) {\n    this._workUnits = workUnits;\n\n    //const WorkUnitsWhere = workUnits.map(workUnit => \"'\" + workUnit + \"'\").join();\n    ////WorkUnitsWhere\n    //this.featerLayer.definitionExpression = \"GlobalID in (\" + WorkUnitsWhere + \")\";\n    //this.featerLayer.when(\n    //  () => {\n    //    const query = this.featerLayer.createQuery();\n    //    query.outSpatialReference = this.mapView.spatialReference;\n    //    this.featerLayer.queryFeatures().then(response => {\n    //      response.features.forEach(feature => {\n    //        const axzz = \"Dfgd\";\n    //      });\n    //    });\n    //    this.featerLayer.queryExtent(query)\n    //      .then(response => {\n    //        if (response.extent !== null) this.mapView.goTo(response.extent).catch(function (error) { console.error(error); });\n    //      });\n\n    //  });\n  }\n  get workUnits(): string[] {\n    return this._workUnits;\n  }\n\n  //public featerLayer: FeatureLayer = new FeatureLayer();\n  //public mapView = new MapView();\n  constructor() {\n\n  }\n\n  async initializeMap() {\n    //const webMap = new WebMap({\n    //  basemap: \"topo\",\n    //  //portalItem: {\n    //  //  //url:\"https://services2.arcgis.com/utNNrmXb4IZOLXXs/ArcGIS/rest/services/JNFILForest/FeatureServer/0/query\"\n    //  //  id: \"streets\"\n    //  //}\n    //});\n    //let basemap = new Basemap({\n    //  portalItem: {\n    //    //url:\"\"\n    //    id: \"streets\"  // WGS84 Streets Vector webmap\n    //  }\n    //});\n\n    //try {\n    //  this.featerLayer = new FeatureLayer({ url: \"https://services2.arcgis.com/utNNrmXb4IZOLXXs/ArcGIS/rest/services/Test_KKLForestManagementUnits/FeatureServer/0/query\" });\n    //  this.featerLayer.opacity = 0.5;\n    //  this.featerLayer.definitionExpression = \"1=2\";\n    //  //this.featerLayer.displayField = \"FOR_NO\";\n    //  //this.featerLayer.labelsVisible = true;\n    //  //this.featerLayer.legendEnabled = true;\n    //  //this.featerLayer.outFields = [\"FOR_NO\"];\n    //  //this.featerLayer.popupEnabled = true;\n    //  const featerRenderer = new SimpleRenderer();\n    //  featerRenderer.label = \"{FOR_NO}\";\n    //  const polygonsSimpleFillSymbol = new SimpleFillSymbol();\n    //  polygonsSimpleFillSymbol.color = Color.fromString(\"gold\");\n    //  polygonsSimpleFillSymbol.outline.color = Color.fromString(\"blue\");\n    //  polygonsSimpleFillSymbol.outline.width = 2;\n    //  featerRenderer.symbol = polygonsSimpleFillSymbol;\n    //  const labelClass = new LabelClass();\n    //  labelClass.labelExpressionInfo = { expression: \"$feature.FOR_NO  \" };\n    //  this.featerLayer.labelingInfo = [labelClass];\n    //  this.featerLayer.renderer = featerRenderer;\n    //  webMap.add(this.featerLayer);\n\n\n    //  this.mapView.container = this.mapViewEl.nativeElement;\n    //  this.mapView.map = webMap;\n\n\n    //  //(await mapView.whenLayerView(featerLayer)).filter.where = \"GlobalID = '\" + this._filter[0] + \"'\";\n    //  //mapView.when(() => {\n    //  //  this.mapLoaded.emit(true);\n    //  //});\n    //} catch (error) {\n    //  alert('We have an error: ' + error);\n    //}\n\n  }\n\n  ngOnInit() {\n    this.initializeMap();\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { WorkUnitComponent } from './work-unit.component';\n\n\n\n@NgModule({\n  declarations: [\n    WorkUnitComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  imports: [\n  ],\n  exports: [\n    WorkUnitComponent\n  ]\n})\nexport class WorkUnitModule { }\n","/*\n * Public API Surface of work-unit\n */\n\nexport * from './lib/work-unit.service';\nexport * from './lib/work-unit.component';\nexport * from './lib/work-unit.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;MAKa,eAAe;IAE1B,iBAAiB;;4GAFN,eAAe;gHAAf,eAAe,cAFd,MAAM;2FAEP,eAAe;kBAH3B,UAAU;mBAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;ACFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAUa,iBAAiB;;;IAsC5B;QAjCU,cAAS,GAAG,IAAI,YAAY,EAAW,CAAC;QAE1C,eAAU,GAAa,EAAE,CAAC;KAiCjC;IAtCD,IAAgD,OAAO,CAAC,OAAmB;QACzE,IAAI,OAAO,EAAE;YAAE,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;SAAE;KAC3C;IAKD,IACI,SAAS,CAAC,SAAmB;QAC/B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;;;;;;;;;;;;;;;;;KAoB7B;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAQK,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAkDlB;KAAA;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;8GAhGU,iBAAiB;kGAAjB,iBAAiB,mPANlB;;OAEL;2FAIM,iBAAiB;kBAR7B,SAAS;mBAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE;;OAEL;oBACL,MAAM,EAAE,EACP;iBACF;0EAGiD,OAAO;sBAAtD,SAAS;uBAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gBAGhC,SAAS;sBAAlB,MAAM;gBAKH,SAAS;sBADZ,KAAK;;;MCVK,cAAc;;2GAAd,cAAc;4GAAd,cAAc,iBAXvB,iBAAiB,aAQjB,iBAAiB;4GAGR,cAAc,YANhB,EACR;2FAKU,cAAc;kBAb1B,QAAQ;mBAAC;oBACR,YAAY,EAAE;wBACZ,iBAAiB;qBAClB;oBACD,OAAO,EAAE;wBACP,sBAAsB;qBACvB;oBACD,OAAO,EAAE,EACR;oBACD,OAAO,EAAE;wBACP,iBAAiB;qBAClB;iBACF;;;ACjBD;;;;ACAA;;;;;;"}